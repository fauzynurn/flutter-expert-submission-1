// Mocks generated by Mockito 5.3.2 from annotations
// in watch_list/test/presentation/bloc/add_to_watch_list_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:core/common/failure.dart' as _i7;
import 'package:core/domain/entities/movie_detail.dart' as _i8;
import 'package:core/domain/entities/tv_series_detail.dart' as _i10;
import 'package:core/domain/repositories/movie_repository.dart' as _i2;
import 'package:core/domain/repositories/tv_series_repository.dart' as _i4;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:watch_list/domain/use_cases/save_movie_watch_list.dart' as _i5;
import 'package:watch_list/domain/use_cases/save_tv_series_watch_list.dart'
    as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieRepository_0 extends _i1.SmartFake
    implements _i2.MovieRepository {
  _FakeMovieRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvSeriesRepository_2 extends _i1.SmartFake
    implements _i4.TvSeriesRepository {
  _FakeTvSeriesRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SaveMovieWatchList].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveMovieWatchList extends _i1.Mock
    implements _i5.SaveMovieWatchList {
  MockSaveMovieWatchList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MovieRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(_i8.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [movie],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, String>>.value(
            _FakeEither_1<_i7.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [movie],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, String>>);
}

/// A class which mocks [SaveTvSeriesWatchList].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveTvSeriesWatchList extends _i1.Mock
    implements _i9.SaveTvSeriesWatchList {
  MockSaveTvSeriesWatchList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvSeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvSeriesRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.TvSeriesRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(
          _i10.TvSeriesDetail? tvSeriesDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tvSeriesDetail],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, String>>.value(
            _FakeEither_1<_i7.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tvSeriesDetail],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, String>>);
}
