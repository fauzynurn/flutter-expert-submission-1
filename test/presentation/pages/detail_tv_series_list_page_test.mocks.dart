// Mocks generated by Mockito 5.3.0 from annotations
// in ditonton/test/presentation/pages/detail_tv_series_list_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i10;

import 'package:ditonton/common/state_enum.dart' as _i6;
import 'package:ditonton/domain/entities/detail_list_type.dart' as _i9;
import 'package:ditonton/domain/entities/tv_series.dart' as _i7;
import 'package:ditonton/domain/usecases/get_now_playing_tv_series.dart' as _i4;
import 'package:ditonton/domain/usecases/get_popular_tv_series.dart' as _i2;
import 'package:ditonton/domain/usecases/get_top_rated_tv_series.dart' as _i3;
import 'package:ditonton/presentation/provider/detail_tv_series_list_notifier.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetPopularTvSeries_0 extends _i1.SmartFake
    implements _i2.GetPopularTvSeries {
  _FakeGetPopularTvSeries_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeGetTopRatedTvSeries_1 extends _i1.SmartFake
    implements _i3.GetTopRatedTvSeries {
  _FakeGetTopRatedTvSeries_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeGetNowPlayingTvSeries_2 extends _i1.SmartFake
    implements _i4.GetNowPlayingTvSeries {
  _FakeGetNowPlayingTvSeries_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [DetailTvSeriesListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailTvSeriesListNotifier extends _i1.Mock
    implements _i5.DetailTvSeriesListNotifier {
  MockDetailTvSeriesListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetPopularTvSeries get getPopularTvSeries =>
      (super.noSuchMethod(Invocation.getter(#getPopularTvSeries),
              returnValue: _FakeGetPopularTvSeries_0(
                  this, Invocation.getter(#getPopularTvSeries)))
          as _i2.GetPopularTvSeries);
  @override
  _i3.GetTopRatedTvSeries get getTopRatedTvSeries =>
      (super.noSuchMethod(Invocation.getter(#getTopRatedTvSeries),
              returnValue: _FakeGetTopRatedTvSeries_1(
                  this, Invocation.getter(#getTopRatedTvSeries)))
          as _i3.GetTopRatedTvSeries);
  @override
  _i4.GetNowPlayingTvSeries get getNowPlayingTvSeries =>
      (super.noSuchMethod(Invocation.getter(#getNowPlayingTvSeries),
              returnValue: _FakeGetNowPlayingTvSeries_2(
                  this, Invocation.getter(#getNowPlayingTvSeries)))
          as _i4.GetNowPlayingTvSeries);
  @override
  _i6.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i6.RequestState.Empty) as _i6.RequestState);
  @override
  List<_i7.TvSeries> get tvSeries =>
      (super.noSuchMethod(Invocation.getter(#tvSeries),
          returnValue: <_i7.TvSeries>[]) as List<_i7.TvSeries>);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i8.Future<void> fetchTvSeries({_i9.DetailListType? detailListType}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #fetchTvSeries, [], {#detailListType: detailListType}),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  void addListener(_i10.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i10.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
